package com.irsspace.irs;

/**
 * This class was automatically generated by the data modeler tool.
 */

public class irsPickupDropoffParticulars
		implements
			java.io.Serializable,
			irsPickupDropoffPoint {

	static final long serialVersionUID = 1L;

	private java.lang.String name;

	// Shadow variables
	private irsPickupDropoffParticulars nextStudent;

	private com.irsspace.irs.irsLocation location;

	private com.irsspace.irs.irsVehicle vehicle;

	private com.irsspace.irs.irsPickupDropoffPoint prevPickupDropoffPoint;

	private java.lang.String dropoffLocationName;

	public irsPickupDropoffParticulars() {
	}

	public java.lang.String getName() {
		return this.name;
	}

	public void setName(java.lang.String name) {
		this.name = name;
	}

	@Override
	public com.irsspace.irs.irsLocation getLocation() {
		return this.location;
	}

	public void setLocation(com.irsspace.irs.irsLocation location) {
		this.location = location;
	}

	@Override
	public com.irsspace.irs.irsVehicle getVehicle() {
		return this.vehicle;
	}

	public void setVehicle(com.irsspace.irs.irsVehicle vehicle) {
		this.vehicle = vehicle;
	}

	public com.irsspace.irs.irsPickupDropoffPoint getPrevPickupDropoffPoint() {
		return this.prevPickupDropoffPoint;
	}

	public void setPrevPickupDropoffPoint(
			com.irsspace.irs.irsPickupDropoffPoint prevPickupDropoffPoint) {
		this.prevPickupDropoffPoint = prevPickupDropoffPoint;
	}

	// ************************************************************************
	// Complex methods
	// ************************************************************************

	/**
	 * @return a positive number, the distance multiplied by 1000 to avoid
	 *         floating point arithmetic rounding errors Euclidean distance to
	 *         be replaced with Google Distance by transit
	 */
	public long getDistanceFromPrevPickupDropoffPoint() {
		if (prevPickupDropoffPoint == null) {
			throw new IllegalStateException(
					"This method must not be called when the prevPickupDropoffPoint ("
							+ prevPickupDropoffPoint
							+ ") is not initialized yet.");
		}
		return getDistanceFrom(prevPickupDropoffPoint);
	}

	/**
	 * @param standstill
	 *            never null
	 * @return a positive number, the distance multiplied by 1000 to avoid
	 *         floating point arithmetic rounding errors
	 */
	 
	public int getNumberofLocationsToSchool(){
	    boolean conditionPassed = false;
	    int numberofLocations = 0;
	    com.irsspace.irs.irsPickupDropoffParticulars curStudent = this ;
	    String schoolName = this.dropoffLocationName;
	    while (curStudent.nextStudent != null) {
	      curStudent = curStudent.nextStudent ;
	      ++numberofLocations;  
	      if (curStudent.name.equals(schoolName)) {
	          conditionPassed = true;
	          // System.out.println("isSchoolAfterStudent condition passed for " + this.name);
	          break;
	      }
	    }
	    return (conditionPassed ? numberofLocations : 0) ;
	}
	
	public long getDistanceFrom(irsPickupDropoffPoint pickupDropoffPoint) {
		return pickupDropoffPoint.getLocation().getDistanceTo(location);
	}

	public long getDistanceTo(irsPickupDropoffPoint pickupDropoffPoint) {
		return location.getDistanceTo(pickupDropoffPoint.getLocation());
	}

	@Override
	public String toString() {
		if (location.getName() == null) {
			return super.toString();
		}
		return location.getName();
	}

	//public com.irsspace.irs.irsPickupDropoffParticulars getNextStudent() {
		//return this.nextStudent;
	//}//

//	public void setNextStudent(
//			com.irsspace.irs.irsPickupDropoffParticulars nextStudent) {
//		this.nextStudent = nextStudent;
//	}

	public java.lang.String getDropoffLocationName() {
		return this.dropoffLocationName;
	}

	public void setDropoffLocationName(java.lang.String dropoffLocationName) {
		this.dropoffLocationName = dropoffLocationName;
	}

	public irsPickupDropoffParticulars(java.lang.String name,
			com.irsspace.irs.irsPickupDropoffParticulars nextStudent,
			com.irsspace.irs.irsLocation location,
			com.irsspace.irs.irsVehicle vehicle,
			com.irsspace.irs.irsPickupDropoffPoint prevPickupDropoffPoint,
			java.lang.String dropoffLocationName) {
		this.name = name;
		this.nextStudent = nextStudent;
		this.location = location;
		this.vehicle = vehicle;
		this.prevPickupDropoffPoint = prevPickupDropoffPoint;
		this.dropoffLocationName = dropoffLocationName;
	}

	public static class DifficultyComparator
			implements
				java.io.Serializable,
				java.util.Comparator<com.irsspace.irs.irsPickupDropoffParticulars> {
		static final long serialVersionUID = 1L;

		@javax.annotation.Generated(value = {"org.optaplanner.workbench.screens.domaineditor.service.ComparatorDefinitionService"})
		public int compare(com.irsspace.irs.irsPickupDropoffParticulars o1,
				com.irsspace.irs.irsPickupDropoffParticulars o2) {
			return 0;
		}
	}

	@Override
	public irsStudent getNextStudent() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public void setNextStudent(irsStudent irsStudent) {
		// TODO Auto-generated method stub
		
	}
	
	

}